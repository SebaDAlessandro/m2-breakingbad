{"version":3,"sources":["components/navbar/NavBar.js","img/logo.png","img/spinner.gif","components/Spinner.js","components/home/Home.js","components/characters/Characters.js","components/characterDetails/CharacterDetail.js","components/episodes/Episodes.js","App.js","store/index.js","index.js"],"names":["NavBar","className","to","Spinner","src","spinner","style","width","margin","display","alt","Home","useState","isLoading","setisLoading","state","setState","useEffect","fetch","then","data","json","info","logo","quote","author","Characters","character","setCharacter","onSubmit","e","preventDefault","onSearch","type","placeholder","value","onChange","target","map","c","char_id","name","CharacterDetail","params","useParams","id","r","key","nickname","portrayed","status","occupation","join","appearance","img","Episodes","index","index2","parseInt","season","series","episode_id","episode","title","App","path","component","exact","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5162bb9c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to ='/'>Home</Link>\r\n      <Link to ='/characters'>Characters</Link>\r\n      <Link to ='/episodes'>Episodes</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","export default __webpack_public_path__ + \"static/media/logo.e6ecab44.png\";","export default __webpack_public_path__ + \"static/media/spinner.11d9cde8.gif\";","import React from 'react';\r\nimport spinner from '../img/spinner.gif'\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <img \r\n            src={spinner} \r\n            style = {{width:'200px', margin:'auto', display:'block'}}\r\n            alt='Loading'\r\n        />\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\r\nimport logo from \"../../img/logo.png\";\r\nimport \"./Home.css\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nfunction Home() {\r\n  /*\r\n  PISTA: podemos usar el hook useEffect para llamar a la api. \r\n  Que haces useEffect? https://es.reactjs.org/docs/hooks-effect.html\r\n  */\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [state, setState] = useState([])\r\n\r\n  useEffect (()=>{\r\n    fetch('https://www.breakingbadapi.com/api/quote/random')\r\n    .then((data)=>data.json())\r\n    .then(info=>{\r\n      setState(info[0]);\r\n      setisLoading(false)\r\n    })\r\n  },[])\r\n\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <img src={logo} alt=\"\" className=\"Home__logo\" />\r\n      <div>\r\n        {isLoading? (\r\n          <Spinner/>\r\n            ):(\r\n          <div>\r\n          <h1>{state.quote}</h1>\r\n          <h2>By: {state.author}</h2>\r\n          </div>\r\n          )\r\n            } \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../Spinner\";\r\nimport \"./Characters.css\";\r\n// import CharacterDetail from '../characterDetails/CharacterDetail'\r\n\r\nfunction Characters() {\r\n  /*\r\n    PISTA:\r\n    La dirección de donde vamos a tomar los datos es\r\n    \r\n    https://www.breakingbadapi.com/api/characters?name=\r\n\r\n    Notesé que hay una query en la dirección. Lo que seguirá a esa query será un string \r\n    con un nombre o un apellido, y en base a eso la api realizará el filtrado.\r\n    En caso de no poner nada en la query, la api traerá a todos los personajes.\r\n  */\r\n  const [isLoading, setisLoading] = useState(true);\r\n  const [state, setState] = useState([])\r\n  const [character, setCharacter] = useState('')\r\n\r\n  useEffect(()=>{\r\n    fetch(`https://www.breakingbadapi.com/api/characters?name=`)\r\n    .then(data=>data.json())\r\n    .then(info=>{\r\n      setState(info)\r\n      setisLoading(false)\r\n    })\r\n  },[]);\r\n\r\n  function onSearch(character){\r\n    fetch(`https://www.breakingbadapi.com/api/characters?name=${character}`)\r\n    .then((data)=>data.json())\r\n    .then(info=>{\r\n      setState(info);\r\n      setisLoading(false)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"Characters\">\r\n      <h1>List of Characters</h1>\r\n\r\n      {/*\r\n        Aquí vamos a definir el buscador de personajes.\r\n        Debemos crear una SearchBar que contenga un form controlado\r\n      */}\r\n\r\n      <form onSubmit={(e)=>{\r\n        e.preventDefault();\r\n        onSearch(character);\r\n        setCharacter('');\r\n      }}>\r\n        <input\r\n          type= 'text'\r\n          placeholder='Find character'\r\n          value={character}\r\n          onChange= {e => setCharacter(e.target.value)}\r\n          />\r\n        <input type=\"submit\" value=\"Find\"/>\r\n        <hr />\r\n      </form>\r\n\r\n      <ul className=\"Characters__list\">\r\n        {/*El loading le va a dar un efecto de carga hasta que la peticion de la API llegue, no tocar!.*/}\r\n         {isLoading ? ( \r\n           <Spinner />\r\n        ) :\r\n          state.map(c=>{\r\n            return(\r\n              <Link key= {c.char_id} to={`/characters/${c.char_id}`}>\r\n                <p  key= {c.char_id}> {c.name}</p>\r\n              </Link>\r\n            )\r\n          })\r\n         }\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Characters;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Spinner from '../Spinner';\r\nimport \"./CharacterDetail.css\";\r\n\r\nfunction CharacterDetail() {\r\n  /*\r\n    PISTA: podemos obtener lo que llegue por parametros con el hook useParams.\r\n    Que hace useParams? https://reactrouter.com/web/example/url-params\r\n    */\r\n  const [character, setCharacter] = useState([]);\r\n  const params = useParams();\r\n  const [isLoading, setisLoading]= useState(true);\r\n\r\n  useEffect(()=>{\r\n    fetch(`https://www.breakingbadapi.com/api/characters/${params.id}`)\r\n    .then(r=>r.json())\r\n    .then(info=>{\r\n      setCharacter(info[0])\r\n      setisLoading(false)\r\n    })\r\n  },[params.id]);\r\n  \r\n  return (\r\n    <div>\r\n      {isLoading?(\r\n        <Spinner/>\r\n      ):\r\n      (<div key={character.key} className=\"CharacterDetail\">\r\n        <h1 key={character.key}>{character.name}</h1>\r\n        <p key={character.key}>Nickname: {character.nickname}</p>\r\n        <p key={character.key}>Protagonist: {character.portrayed}</p>\r\n        <p key={character.key}>Status: {character.status}</p>\r\n        <p key={character.key}>Occupation: {character.occupation.join(' - ')}</p>{/*como corno hago? facil hay que preguntarle a jona*/}\r\n        <p key={character.key}>Appearance: {character.appearance.join(' - ')}</p>\r\n        <img key={character.key} className=\"CharacterDetail__Photo\" src={character.img} alt=\"Img not found\"/>\r\n      </div>)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CharacterDetail;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Episodes.css\";\r\n\r\nfunction Episodes() {\r\n\r\n  // const [isLoading, setisLoading] = useState(true);\r\n  const [state, setState] = useState([])\r\n\r\n  useEffect (()=>{\r\n    fetch('https://www.breakingbadapi.com/api/episodes')\r\n    .then((data)=>data.json())\r\n    .then(info=>{\r\n      setState(info);\r\n      // setisLoading(false)\r\n    })\r\n  },[])\r\n\r\n  \r\n\r\n  let index =0;\r\n  let index2=0;\r\n  return (\r\n    <div className=\"Episodes\">\r\n      <h1>Episodes List</h1>\r\n      <ul className=\"Episodes__list\">\r\n        {\r\n        state.map(e=>{\r\n          if (parseInt(e.season) !== index && e.series === 'Breaking Bad'){\r\n            index++;\r\n            return(\r\n              <div>\r\n                <hr></hr>\r\n                <h2 key={e.episode_id}>{e.series} - Season: {e.season}</h2>\r\n                <hr></hr>\r\n                <p key={e.episode_id}>Episode {e.episode}: {e.title}</p>\r\n              </div>\r\n            );\r\n          } else if(parseInt(e.season) !== index2 && e.series === 'Better Call Saul'){\r\n              index2++;\r\n              return(\r\n              <div>\r\n                <hr></hr>\r\n                <h2 key={e.episode_id}>{e.series} - Season: {e.season}</h2>\r\n                <hr></hr>\r\n                <p key={e.episode_id}>Episode {e.episode}: {e.title}</p>\r\n              </div>\r\n            );\r\n          }else{\r\n            return(\r\n              <div>\r\n              <p key={e.episode_id}>Episode {e.episode}: {e.title}</p>\r\n              </div>\r\n            )\r\n          }\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Episodes;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport NavBar from './components/navbar/NavBar';\r\nimport Home from \"./components/home/Home\";\r\nimport Characters from './components/characters/Characters';\r\nimport CharacterDetail from './components/characterDetails/CharacterDetail';\r\nimport Episodes from './components/episodes/Episodes';\r\n//import episodeDetail from './components/episodeDetail/episodeDetail.js';\r\n\r\nfunction App() {\r\n  return (\r\n  <div className = 'App'>\r\n    <Route path='/' component={NavBar}/>\r\n    <Route exact path='/' component={Home}/>\r\n    <Route exact path='/characters' component={Characters}/>\r\n    <Route exact path='/characters/:id' component={CharacterDetail}/>\r\n    <Route exact path='/episodes' component={Episodes}/>\r\n    \r\n  </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import rootReducer from '../Reducer/index';\r\n\r\nconst store = createStore(\r\n    // rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport store from './store/index'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <div className='index'>\r\n        <App />\r\n      </div>\r\n    </BrowserRouter>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}